# .github/workflows/deploy.yml
# Deploy an Angular SPA to GitHub Pages (static HTTPS)
# Includes SPA fallback (404.html) and .nojekyll

name: Deploy Angular App to GitHub Pages

on:
  push:
    branches: [ "main" ]      # adjust if your default branch has a different name
  workflow_dispatch:          # allow manual runs from the Actions UI

# -------------------------------------------------
# Permissions ‚Äì needed for the deploy action to push
# -------------------------------------------------
permissions:
  contents: write   # allows the action to create/overwrite the gh‚Äëpages branch
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      # -------------------------------------------------
      # 1Ô∏è‚É£ Checkout the repository
      # -------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # -------------------------------------------------
      # 2Ô∏è‚É£ Set up Node.js (LTS) and cache npm modules
      # -------------------------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # -------------------------------------------------
      # 3Ô∏è‚É£ Install dependencies (including @angular/cli)
      # -------------------------------------------------
      - name: Install dependencies
        run: npm ci

      # -------------------------------------------------
      # 4Ô∏è‚É£ Build Angular with the correct base‚Äëhref
      # -------------------------------------------------
      - name: Build Angular app
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "üîß Building for repo: $REPO_NAME"
          # The base‚Äëhref must match the sub‚Äëpath GitHub Pages will serve from
          npx ng build --configuration production --base-href "/${REPO_NAME}/"

      # -------------------------------------------------
      # 5Ô∏è‚É£ Detect the folder Angular actually created under ./dist/
      # -------------------------------------------------
      - name: Detect build folder
        id: detect
        run: |
          BUILD_DIR=$(find ./dist -mindepth 1 -maxdepth 1 -type d | head -n1)
          if [[ -z "$BUILD_DIR" ]]; then
            echo "‚ùå No folder found under ./dist after build."
            ls -R ./dist   # dump for debugging
            exit 1
          fi
          echo "‚úÖ Build folder detected: $BUILD_DIR"
          echo "build_dir=$BUILD_DIR" >> $GITHUB_OUTPUT

      # -------------------------------------------------
      # 6Ô∏è‚É£ Add SPA fallback (index.html ‚Üí 404.html) & .nojekyll
      # -------------------------------------------------
      - name: Add SPA fallback & .nojekyll
        env:
          BUILD_DIR: ${{ steps.detect.outputs.build_dir }}
        run: |
          echo "üìÅ Working in $BUILD_DIR"
          cp "${BUILD_DIR}/index.html" "${BUILD_DIR}/404.html"
          touch "${BUILD_DIR}/.nojekyll"

      # -------------------------------------------------
      # 7Ô∏è‚É£ Deploy to GitHub Pages (creates/updates gh‚Äëpages)
      # -------------------------------------------------
      - name: Deploy to GitHub Pages
        id: deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages                # target branch
          folder: ${{ steps.detect.outputs.build_dir }}   # the folder we just built
          clean: true                     # wipe old files on gh‚Äëpages before copy
          token: ${{ secrets.GITHUB_TOKEN }}
