# .github/workflows/deploy.yml
# Deploy an Angular SPA to GitHub Pages (static HTTPS)
# Handles unknown project names, forces a known output folder,
# adds SPA fallback (404.html) and .nojekyll.

name: Deploy Angular App to GitHub Pages

on:
  push:
    branches: [ "main" ]      # change if your default branch has a different name
  workflow_dispatch:          # allow manual runs

# -------------------------------------------------
# Permissions ‚Äì needed for the deploy action to push
# -------------------------------------------------
permissions:
  contents: write   # lets the action create/overwrite gh‚Äëpages
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      # -------------------------------------------------
      # 1Ô∏è‚É£ Checkout the repository
      # -------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # -------------------------------------------------
      # 2Ô∏è‚É£ Set up Node.js (Angular CLI needs ‚â•‚ÄØ20)
      # -------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"   # Angular CLI minimum version
          cache: "npm"

      # -------------------------------------------------
      # 3Ô∏è‚É£ Install npm dependencies (includes @angular/cli)
      # -------------------------------------------------
      - name: Install dependencies
        run: npm ci

      # -------------------------------------------------
      # 4Ô∏è‚É£ Determine the Angular project name
      # -------------------------------------------------
      - name: Get Angular project name
        id: proj
        run: |
          # The default project is stored under "defaultProject" in angular.json
          DEFAULT=$(jq -r '.defaultProject // empty' angular.json || echo "")
          if [[ -n "$DEFAULT" ]]; then
            echo "Found defaultProject: $DEFAULT"
            echo "project=$DEFAULT" >> $GITHUB_OUTPUT
          else
            # Fall back: pick the first project key under "projects"
            FIRST=$(jq -r '.projects | keys[0]' angular.json)
            echo "Using first project key: $FIRST"
            echo "project=$FIRST" >> $GITHUB_OUTPUT
          fi

      # -------------------------------------------------
      # 5Ô∏è‚É£ Build Angular ‚Äì force a known output folder
      # -------------------------------------------------
      - name: Build Angular app
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          PROJECT: ${{ steps.proj.outputs.project }}
        run: |
          echo "üîß Building project '$PROJECT' for repo: $REPO_NAME"
          # Force the output folder to ./dist/out so we always know where it lands
          npx ng build "$PROJECT" \
            --configuration production \
            --output-path=dist/out \
            --base-href="/${REPO_NAME}/"

      # -------------------------------------------------
      # 6Ô∏è‚É£ Debug ‚Äì list what the build produced
      # -------------------------------------------------
      - name: List build output
        run: |
          echo "=== CONTENTS OF ./dist/out ==="
          ls -R ./dist/out
          echo "=== END OF LIST ==="

      # -------------------------------------------------
      # 7Ô∏è‚É£ Add SPA fallback (index.html ‚Üí 404.html) & .nojekyll
      # -------------------------------------------------
      - name: Add SPA fallback & .nojekyll
        run: |
          BUILD_DIR=./dist/out
          if [[ ! -f "${BUILD_DIR}/index.html" ]]; then
            echo "‚ùå index.html not found in ${BUILD_DIR} ‚Äì aborting."
            exit 1
          fi
          cp "${BUILD_DIR}/index.html" "${BUILD_DIR}/404.html"
          touch "${BUILD_DIR}/.nojekyll"
          echo "‚úÖ Created 404.html and .nojekyll in ${BUILD_DIR}"

      # -------------------------------------------------
      # 8Ô∏è‚É£ Deploy to GitHub Pages (creates/updates gh‚Äëpages)
      # -------------------------------------------------
      - name: Deploy to GitHub Pages
        id: deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages                # target branch
          folder: ./dist/out               # the folder we just prepared
          clean: true                     # wipe old files before copy
          token: ${
